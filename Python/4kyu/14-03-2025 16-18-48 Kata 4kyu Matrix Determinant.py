"""Напишите функцию, которая принимает квадратную матрицу (N x Nдвумерный массив) и 
возвращает определитель матрицы.

Как вычислить определитель матрицы — проще всего начать с самых простых случаев:

Матрица 1x1 |a| имеет определитель a.

Матрица 2х2 [ [a, b], [c, d] ] или

|a  b|
|c  d|
имеет определяющий: a*d - b*c.

Определитель матрицы n x n размера вычисляется путём сведения задачи к вычислению определителей 
матриц n размераn-1 x n-1.

Для корпуса 3x3, [ [a, b, c], [d, e, f], [g, h, i] ] или

|a b c|  
|d e f|  
|g h i|  
определитель равен: a * det(a_minor) - b * det(b_minor) + c * det(c_minor) где det(a_minor) 
означает вычисление определителя матрицы 2x2, полученной путём вычёркивания строки и столбца, 
в которых находится элемент a:

|- - -|
|- e f|
|- h i|  
Обратите внимание на чередование знаков.

Определитель больших матриц вычисляется аналогично, например, если M представляет собой матрицу 4x4 
с первой строкой [a, b, c, d], то:

det(M) = a * det(a_minor) - b * det(b_minor) + c * det(c_minor) - d * det(d_minor)"""

import numpy as np

def determinant(matrix):
    mat = np.empty((matrix, matrix), dtype = int)
    for i in range(matrix):
        for j in range(matrix):
            mat[i][j] = i * j
    print(mat)

    return 0

print(determinant(3))